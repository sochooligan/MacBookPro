gdb 安装和授权

1. 安装
   brew install --force --build-from-source domq/gdb/gdb
        参考: https://segmentfault.com/q/1010000004136334
   	说明：使用命令 brew install gdb 安装的gdb在调试时，第一次会挂住，使用上面
              的命令安装可以解决。
        bug的链接：https://sourceware.org/bugzilla/show_bug.cgi?id=24069
	  ...
    	  (gdb) run
    	  -> Starts program but then locks up. Could only terminate via ForceQuit
	  Taking a sample form the hanging gdb processes revealed that it hangs in darwin_decode_message at a wait4 call.
    	  ...

==> Downloading https://formulae.brew.sh/api/formula.jws.json
######################################################################### 100.0%
==> Fetching dependencies for domq/gdb/gdb: texinfo
==> Fetching texinfo
==> Downloading https://ghcr.io/v2/homebrew/core/texinfo/manifests/7.0.3_1
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/texinfo/blobs/sha256:37d2829b2d
######################################################################### 100.0%
==> Fetching domq/gdb/gdb
==> Downloading https://ftp.gnu.org/gnu/gdb/gdb-13.1.tar.xz
######################################################################### 100.0%
==> Installing gdb from domq/gdb
==> Installing dependencies for domq/gdb/gdb: texinfo
==> Installing domq/gdb/gdb dependency: texinfo
==> Pouring texinfo--7.0.3_1.big_sur.bottle.tar.gz
==> Downloading https://formulae.brew.sh/api/cask.jws.json
######################################################################### 100.0%
🍺  /usr/local/Cellar/texinfo/7.0.3_1: 417 files, 9.1MB
==> Installing domq/gdb/gdb
==> Patching
==> ../configure --enable-targets=all --prefix=/usr/local/Cellar/gdb/13.1_1 --di
==> make
==> make install-gdb maybe-install-gdbserver
==> Caveats
gdb requires special privileges to access Mach ports.
You will need to codesign the binary. For instructions, see:

  https://sourceware.org/gdb/wiki/BuildingOnDarwin
==> Summary
🍺  /usr/local/Cellar/gdb/13.1_1: 67 files, 30.7MB, built in 12 minutes
==> Running `brew cleanup gdb`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
==> Caveats
==> gdb
gdb requires special privileges to access Mach ports.
You will need to codesign the binary. For instructions, see:

  https://sourceware.org/gdb/wiki/BuildingOnDarwin

2. codesign
   (1) 创建证书
        参考: https://gist.github.com/hlissner/898b7dfc0a3b63824a70e15cd0180154
       a. 打开Keychain Access
       b. 在菜单栏：Keychain Access > Certificate Assistant > Create a certificate...
       c. 给个名字：如 gdbc
           Identity type: Self Signed Root
	   Certificate type: Code Signing
	   勾选 Let me override defaults
       d. 时间指定了一个较长的值 7300 天
       e. Continue until it prompts you for: "Specify a location for..."
           Set Keychain location to: System
       f. 创建certificate 并关闭 assistant
       g. Keychain Access > System
           My Certificates > gdbc (刚创建的) > 双击
	   在弹出的窗口，展开 Trust，设置 Code signing 为 always trust
       h. 终端里执行命令sudo killall taskgated（重启taskgated）
   (2) 授权
        参考：https://sourceware.org/gdb/wiki/BuildingOnDarwin
       a. 创建文件 gdb-entitlement.xml
            <?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
            "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
            <plist version="1.0">
            <dict>
                <key>com.apple.security.cs.allow-jit</key>
                <true/>
                <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
                <true/>
                <key>com.apple.security.cs.allow-dyld-environment-variables</key>
                <true/>
                <key>com.apple.security.cs.disable-library-validation</key>
                <true/>
                <key>com.apple.security.cs.disable-executable-page-protection</key>
                <true/>
                <key>com.apple.security.cs.debugger</key>
                <true/>
                <key>com.apple.security.get-task-allow</key>
                <true/>
            </dict>
            </plist>
       b. 执行codesign命令
          codesign --entitlements gdb-entitlement.xml -fs gdbc $(which gdb)
